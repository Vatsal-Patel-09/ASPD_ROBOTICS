
ASPD_ROBOTICS_MOTION.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003c4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006e4  00000000  00000000  00000418  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  00000afc  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  00000b88  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000a8f  00000000  00000000  00000c08  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000012d  00000000  00000000  00001697  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000488  00000000  00000000  000017c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000c4  00000000  00000000  00001c4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000186  00000000  00000000  00001d10  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 ec       	ldi	r30, 0xC4	; 196
  fc:	f3 e0       	ldi	r31, 0x03	; 3
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 30       	cpi	r26, 0x00	; 0
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	12 e0       	ldi	r17, 0x02	; 2
 110:	a0 e0       	ldi	r26, 0x00	; 0
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a0 30       	cpi	r26, 0x00	; 0
 11a:	b1 07       	cpc	r27, r17
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	0e 94 b6 00 	call	0x16c	; 0x16c <main>
 122:	0c 94 e0 01 	jmp	0x3c0	; 0x3c0 <_exit>

00000126 <__bad_interrupt>:
 126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <motion_pin_config>:
#include <avr/io.h>
#include <util/delay.h>

void motion_pin_config(void)
{
	DDRA = 0x0F;
 12a:	8f e0       	ldi	r24, 0x0F	; 15
 12c:	81 b9       	out	0x01, r24	; 1
	PORTA = 0x00;
 12e:	12 b8       	out	0x02, r1	; 2
	DDRL = 0x18;
 130:	88 e1       	ldi	r24, 0x18	; 24
 132:	80 93 0a 01 	sts	0x010A, r24
	PORTL = 0x18;
 136:	80 93 0b 01 	sts	0x010B, r24
}
 13a:	08 95       	ret

0000013c <forward>:
void forward(void)
{
	PORTA= 0x06;
 13c:	86 e0       	ldi	r24, 0x06	; 6
 13e:	82 b9       	out	0x02, r24	; 2
}
 140:	08 95       	ret

00000142 <stop>:
void stop(void)
{
	PORTA = 0x00;
 142:	12 b8       	out	0x02, r1	; 2
}
 144:	08 95       	ret

00000146 <backward>:
void backward(void)
{	
	PORTA = 0x09;
 146:	89 e0       	ldi	r24, 0x09	; 9
 148:	82 b9       	out	0x02, r24	; 2
}
 14a:	08 95       	ret

0000014c <sharp_left>:
void sharp_left(void)
{
	PORTA = PORTA | 0x05;
 14c:	82 b1       	in	r24, 0x02	; 2
 14e:	85 60       	ori	r24, 0x05	; 5
 150:	82 b9       	out	0x02, r24	; 2
}
 152:	08 95       	ret

00000154 <sharp_right>:
void sharp_right(void)
{
	PORTA = PORTA | 0x0A;
 154:	82 b1       	in	r24, 0x02	; 2
 156:	8a 60       	ori	r24, 0x0A	; 10
 158:	82 b9       	out	0x02, r24	; 2
}
 15a:	08 95       	ret

0000015c <soft_left>:
void soft_left(void)
{
	PORTA = PORTA | 0x04;
 15c:	12 9a       	sbi	0x02, 2	; 2
}
 15e:	08 95       	ret

00000160 <soft_right>:
void soft_right(void)
{
	PORTA = PORTA | 0x02;
 160:	11 9a       	sbi	0x02, 1	; 2
}
 162:	08 95       	ret

00000164 <soft_back_left>:
void soft_back_left(void)
{
	PORTA = PORTA | 0x01;
 164:	10 9a       	sbi	0x02, 0	; 2
}
 166:	08 95       	ret

00000168 <soft_back_right>:
void soft_back_right(void)
{
	PORTA = PORTA | 0x08;
 168:	13 9a       	sbi	0x02, 3	; 2
}
 16a:	08 95       	ret

0000016c <main>:

int main(void)
{
	motion_pin_config();
 16c:	0e 94 95 00 	call	0x12a	; 0x12a <motion_pin_config>
	//1
	
	forward();
 170:	0e 94 9e 00 	call	0x13c	; 0x13c <forward>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 174:	8f ef       	ldi	r24, 0xFF	; 255
 176:	9f e7       	ldi	r25, 0x7F	; 127
 178:	a7 e6       	ldi	r26, 0x67	; 103
 17a:	81 50       	subi	r24, 0x01	; 1
 17c:	90 40       	sbci	r25, 0x00	; 0
 17e:	a0 40       	sbci	r26, 0x00	; 0
 180:	e1 f7       	brne	.-8      	; 0x17a <main+0xe>
 182:	00 c0       	rjmp	.+0      	; 0x184 <main+0x18>
 184:	00 00       	nop
	_delay_ms(2300);		
	stop();
 186:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
 18a:	8f ef       	ldi	r24, 0xFF	; 255
 18c:	9f e7       	ldi	r25, 0x7F	; 127
 18e:	a4 e0       	ldi	r26, 0x04	; 4
 190:	81 50       	subi	r24, 0x01	; 1
 192:	90 40       	sbci	r25, 0x00	; 0
 194:	a0 40       	sbci	r26, 0x00	; 0
 196:	e1 f7       	brne	.-8      	; 0x190 <main+0x24>
 198:	00 c0       	rjmp	.+0      	; 0x19a <main+0x2e>
 19a:	00 00       	nop
	_delay_ms(100);
	
	
	sharp_right();
 19c:	0e 94 aa 00 	call	0x154	; 0x154 <sharp_right>
 1a0:	8f ef       	ldi	r24, 0xFF	; 255
 1a2:	9f e7       	ldi	r25, 0x7F	; 127
 1a4:	af e1       	ldi	r26, 0x1F	; 31
 1a6:	81 50       	subi	r24, 0x01	; 1
 1a8:	90 40       	sbci	r25, 0x00	; 0
 1aa:	a0 40       	sbci	r26, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <main+0x3a>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <main+0x44>
 1b0:	00 00       	nop
	_delay_ms(700);
	stop();
 1b2:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
	//2
	forward();
 1b6:	0e 94 9e 00 	call	0x13c	; 0x13c <forward>
 1ba:	8f ef       	ldi	r24, 0xFF	; 255
 1bc:	9f ef       	ldi	r25, 0xFF	; 255
 1be:	ac e2       	ldi	r26, 0x2C	; 44
 1c0:	81 50       	subi	r24, 0x01	; 1
 1c2:	90 40       	sbci	r25, 0x00	; 0
 1c4:	a0 40       	sbci	r26, 0x00	; 0
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <main+0x54>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <main+0x5e>
 1ca:	00 00       	nop
	_delay_ms(1000);	
	stop();
 1cc:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
 1d0:	8f ef       	ldi	r24, 0xFF	; 255
 1d2:	9f e7       	ldi	r25, 0x7F	; 127
 1d4:	a4 e0       	ldi	r26, 0x04	; 4
 1d6:	81 50       	subi	r24, 0x01	; 1
 1d8:	90 40       	sbci	r25, 0x00	; 0
 1da:	a0 40       	sbci	r26, 0x00	; 0
 1dc:	e1 f7       	brne	.-8      	; 0x1d6 <main+0x6a>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <main+0x74>
 1e0:	00 00       	nop
	_delay_ms(100);
	
	
	sharp_right();
 1e2:	0e 94 aa 00 	call	0x154	; 0x154 <sharp_right>
 1e6:	8f ef       	ldi	r24, 0xFF	; 255
 1e8:	9f e7       	ldi	r25, 0x7F	; 127
 1ea:	a6 e1       	ldi	r26, 0x16	; 22
 1ec:	81 50       	subi	r24, 0x01	; 1
 1ee:	90 40       	sbci	r25, 0x00	; 0
 1f0:	a0 40       	sbci	r26, 0x00	; 0
 1f2:	e1 f7       	brne	.-8      	; 0x1ec <main+0x80>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <main+0x8a>
 1f6:	00 00       	nop
	_delay_ms(500);
	stop();
 1f8:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
	//3
	forward();
 1fc:	0e 94 9e 00 	call	0x13c	; 0x13c <forward>
 200:	8f ef       	ldi	r24, 0xFF	; 255
 202:	9f ef       	ldi	r25, 0xFF	; 255
 204:	ac e2       	ldi	r26, 0x2C	; 44
 206:	81 50       	subi	r24, 0x01	; 1
 208:	90 40       	sbci	r25, 0x00	; 0
 20a:	a0 40       	sbci	r26, 0x00	; 0
 20c:	e1 f7       	brne	.-8      	; 0x206 <main+0x9a>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <main+0xa4>
 210:	00 00       	nop
	_delay_ms(1000);
	stop();
 212:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
 216:	8f ef       	ldi	r24, 0xFF	; 255
 218:	9f e7       	ldi	r25, 0x7F	; 127
 21a:	a4 e0       	ldi	r26, 0x04	; 4
 21c:	81 50       	subi	r24, 0x01	; 1
 21e:	90 40       	sbci	r25, 0x00	; 0
 220:	a0 40       	sbci	r26, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <main+0xb0>
 224:	00 c0       	rjmp	.+0      	; 0x226 <main+0xba>
 226:	00 00       	nop
	_delay_ms(100);
	
	sharp_left();
 228:	0e 94 a6 00 	call	0x14c	; 0x14c <sharp_left>
 22c:	8f ef       	ldi	r24, 0xFF	; 255
 22e:	9f ef       	ldi	r25, 0xFF	; 255
 230:	a3 e2       	ldi	r26, 0x23	; 35
 232:	81 50       	subi	r24, 0x01	; 1
 234:	90 40       	sbci	r25, 0x00	; 0
 236:	a0 40       	sbci	r26, 0x00	; 0
 238:	e1 f7       	brne	.-8      	; 0x232 <main+0xc6>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <main+0xd0>
 23c:	00 00       	nop
	_delay_ms(800);
	stop();
 23e:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
	//4
	forward();
 242:	0e 94 9e 00 	call	0x13c	; 0x13c <forward>
 246:	8f ef       	ldi	r24, 0xFF	; 255
 248:	9f e7       	ldi	r25, 0x7F	; 127
 24a:	a3 e4       	ldi	r26, 0x43	; 67
 24c:	81 50       	subi	r24, 0x01	; 1
 24e:	90 40       	sbci	r25, 0x00	; 0
 250:	a0 40       	sbci	r26, 0x00	; 0
 252:	e1 f7       	brne	.-8      	; 0x24c <main+0xe0>
 254:	00 c0       	rjmp	.+0      	; 0x256 <main+0xea>
 256:	00 00       	nop
	_delay_ms(1500);
	stop();
 258:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
 25c:	8f ef       	ldi	r24, 0xFF	; 255
 25e:	9f e7       	ldi	r25, 0x7F	; 127
 260:	a4 e0       	ldi	r26, 0x04	; 4
 262:	81 50       	subi	r24, 0x01	; 1
 264:	90 40       	sbci	r25, 0x00	; 0
 266:	a0 40       	sbci	r26, 0x00	; 0
 268:	e1 f7       	brne	.-8      	; 0x262 <main+0xf6>
 26a:	00 c0       	rjmp	.+0      	; 0x26c <main+0x100>
 26c:	00 00       	nop
	_delay_ms(100);
	
	//perfect
	
	
	sharp_right();
 26e:	0e 94 aa 00 	call	0x154	; 0x154 <sharp_right>
 272:	8f ef       	ldi	r24, 0xFF	; 255
 274:	9f eb       	ldi	r25, 0xBF	; 191
 276:	a1 e2       	ldi	r26, 0x21	; 33
 278:	81 50       	subi	r24, 0x01	; 1
 27a:	90 40       	sbci	r25, 0x00	; 0
 27c:	a0 40       	sbci	r26, 0x00	; 0
 27e:	e1 f7       	brne	.-8      	; 0x278 <main+0x10c>
 280:	00 c0       	rjmp	.+0      	; 0x282 <main+0x116>
 282:	00 00       	nop
	_delay_ms(750);
	stop();
 284:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
	//5
	forward();
 288:	0e 94 9e 00 	call	0x13c	; 0x13c <forward>
 28c:	8f ef       	ldi	r24, 0xFF	; 255
 28e:	9f ef       	ldi	r25, 0xFF	; 255
 290:	a2 e6       	ldi	r26, 0x62	; 98
 292:	81 50       	subi	r24, 0x01	; 1
 294:	90 40       	sbci	r25, 0x00	; 0
 296:	a0 40       	sbci	r26, 0x00	; 0
 298:	e1 f7       	brne	.-8      	; 0x292 <main+0x126>
 29a:	00 c0       	rjmp	.+0      	; 0x29c <main+0x130>
 29c:	00 00       	nop
	_delay_ms(2200);
	stop();
 29e:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
 2a2:	8f ef       	ldi	r24, 0xFF	; 255
 2a4:	9f e7       	ldi	r25, 0x7F	; 127
 2a6:	a4 e0       	ldi	r26, 0x04	; 4
 2a8:	81 50       	subi	r24, 0x01	; 1
 2aa:	90 40       	sbci	r25, 0x00	; 0
 2ac:	a0 40       	sbci	r26, 0x00	; 0
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <main+0x13c>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <main+0x146>
 2b2:	00 00       	nop
	_delay_ms(100);
	
	sharp_right();
 2b4:	0e 94 aa 00 	call	0x154	; 0x154 <sharp_right>
 2b8:	8f ef       	ldi	r24, 0xFF	; 255
 2ba:	9f e7       	ldi	r25, 0x7F	; 127
 2bc:	af e1       	ldi	r26, 0x1F	; 31
 2be:	81 50       	subi	r24, 0x01	; 1
 2c0:	90 40       	sbci	r25, 0x00	; 0
 2c2:	a0 40       	sbci	r26, 0x00	; 0
 2c4:	e1 f7       	brne	.-8      	; 0x2be <main+0x152>
 2c6:	00 c0       	rjmp	.+0      	; 0x2c8 <main+0x15c>
 2c8:	00 00       	nop
	_delay_ms(700);
	stop();
 2ca:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
	//6
	forward();
 2ce:	0e 94 9e 00 	call	0x13c	; 0x13c <forward>
 2d2:	8f ef       	ldi	r24, 0xFF	; 255
 2d4:	9f e7       	ldi	r25, 0x7F	; 127
 2d6:	a3 e4       	ldi	r26, 0x43	; 67
 2d8:	81 50       	subi	r24, 0x01	; 1
 2da:	90 40       	sbci	r25, 0x00	; 0
 2dc:	a0 40       	sbci	r26, 0x00	; 0
 2de:	e1 f7       	brne	.-8      	; 0x2d8 <main+0x16c>
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <main+0x176>
 2e2:	00 00       	nop
	_delay_ms(1500);
	stop();
 2e4:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
 2e8:	8f ef       	ldi	r24, 0xFF	; 255
 2ea:	9f e7       	ldi	r25, 0x7F	; 127
 2ec:	a4 e0       	ldi	r26, 0x04	; 4
 2ee:	81 50       	subi	r24, 0x01	; 1
 2f0:	90 40       	sbci	r25, 0x00	; 0
 2f2:	a0 40       	sbci	r26, 0x00	; 0
 2f4:	e1 f7       	brne	.-8      	; 0x2ee <main+0x182>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <main+0x18c>
 2f8:	00 00       	nop
	_delay_ms(100);
	
	sharp_left();
 2fa:	0e 94 a6 00 	call	0x14c	; 0x14c <sharp_left>
 2fe:	8f ef       	ldi	r24, 0xFF	; 255
 300:	9f e7       	ldi	r25, 0x7F	; 127
 302:	af e1       	ldi	r26, 0x1F	; 31
 304:	81 50       	subi	r24, 0x01	; 1
 306:	90 40       	sbci	r25, 0x00	; 0
 308:	a0 40       	sbci	r26, 0x00	; 0
 30a:	e1 f7       	brne	.-8      	; 0x304 <main+0x198>
 30c:	00 c0       	rjmp	.+0      	; 0x30e <main+0x1a2>
 30e:	00 00       	nop
	_delay_ms(700);
	stop();
 310:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
	//7
	forward();
 314:	0e 94 9e 00 	call	0x13c	; 0x13c <forward>
 318:	8f ef       	ldi	r24, 0xFF	; 255
 31a:	9f ef       	ldi	r25, 0xFF	; 255
 31c:	a5 e3       	ldi	r26, 0x35	; 53
 31e:	81 50       	subi	r24, 0x01	; 1
 320:	90 40       	sbci	r25, 0x00	; 0
 322:	a0 40       	sbci	r26, 0x00	; 0
 324:	e1 f7       	brne	.-8      	; 0x31e <main+0x1b2>
 326:	00 c0       	rjmp	.+0      	; 0x328 <main+0x1bc>
 328:	00 00       	nop
	_delay_ms(1200);
	stop();
 32a:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
 32e:	8f ef       	ldi	r24, 0xFF	; 255
 330:	9f e7       	ldi	r25, 0x7F	; 127
 332:	a4 e0       	ldi	r26, 0x04	; 4
 334:	81 50       	subi	r24, 0x01	; 1
 336:	90 40       	sbci	r25, 0x00	; 0
 338:	a0 40       	sbci	r26, 0x00	; 0
 33a:	e1 f7       	brne	.-8      	; 0x334 <main+0x1c8>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <main+0x1d2>
 33e:	00 00       	nop
	_delay_ms(100);
	
	sharp_right();
 340:	0e 94 aa 00 	call	0x154	; 0x154 <sharp_right>
 344:	8f ef       	ldi	r24, 0xFF	; 255
 346:	9f eb       	ldi	r25, 0xBF	; 191
 348:	af e0       	ldi	r26, 0x0F	; 15
 34a:	81 50       	subi	r24, 0x01	; 1
 34c:	90 40       	sbci	r25, 0x00	; 0
 34e:	a0 40       	sbci	r26, 0x00	; 0
 350:	e1 f7       	brne	.-8      	; 0x34a <main+0x1de>
 352:	00 c0       	rjmp	.+0      	; 0x354 <main+0x1e8>
 354:	00 00       	nop
	_delay_ms(350);
	stop();
 356:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
	//8
	forward();
 35a:	0e 94 9e 00 	call	0x13c	; 0x13c <forward>
 35e:	8f ef       	ldi	r24, 0xFF	; 255
 360:	9f ef       	ldi	r25, 0xFF	; 255
 362:	ac e2       	ldi	r26, 0x2C	; 44
 364:	81 50       	subi	r24, 0x01	; 1
 366:	90 40       	sbci	r25, 0x00	; 0
 368:	a0 40       	sbci	r26, 0x00	; 0
 36a:	e1 f7       	brne	.-8      	; 0x364 <main+0x1f8>
 36c:	00 c0       	rjmp	.+0      	; 0x36e <main+0x202>
 36e:	00 00       	nop
	_delay_ms(1000);
	stop();
 370:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
 374:	8f ef       	ldi	r24, 0xFF	; 255
 376:	9f e7       	ldi	r25, 0x7F	; 127
 378:	a4 e0       	ldi	r26, 0x04	; 4
 37a:	81 50       	subi	r24, 0x01	; 1
 37c:	90 40       	sbci	r25, 0x00	; 0
 37e:	a0 40       	sbci	r26, 0x00	; 0
 380:	e1 f7       	brne	.-8      	; 0x37a <main+0x20e>
 382:	00 c0       	rjmp	.+0      	; 0x384 <main+0x218>
 384:	00 00       	nop
	_delay_ms(100);
	
	sharp_right();
 386:	0e 94 aa 00 	call	0x154	; 0x154 <sharp_right>
 38a:	8f ef       	ldi	r24, 0xFF	; 255
 38c:	9f ef       	ldi	r25, 0xFF	; 255
 38e:	a3 e2       	ldi	r26, 0x23	; 35
 390:	81 50       	subi	r24, 0x01	; 1
 392:	90 40       	sbci	r25, 0x00	; 0
 394:	a0 40       	sbci	r26, 0x00	; 0
 396:	e1 f7       	brne	.-8      	; 0x390 <main+0x224>
 398:	00 c0       	rjmp	.+0      	; 0x39a <main+0x22e>
 39a:	00 00       	nop
	_delay_ms(800);
	stop();
 39c:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
	//9
	forward();
 3a0:	0e 94 9e 00 	call	0x13c	; 0x13c <forward>
 3a4:	8f ef       	ldi	r24, 0xFF	; 255
 3a6:	9f e7       	ldi	r25, 0x7F	; 127
 3a8:	a3 e4       	ldi	r26, 0x43	; 67
 3aa:	81 50       	subi	r24, 0x01	; 1
 3ac:	90 40       	sbci	r25, 0x00	; 0
 3ae:	a0 40       	sbci	r26, 0x00	; 0
 3b0:	e1 f7       	brne	.-8      	; 0x3aa <main+0x23e>
 3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <main+0x248>
 3b4:	00 00       	nop
	_delay_ms(1500);
	stop();
 3b6:	0e 94 a1 00 	call	0x142	; 0x142 <stop>
 3ba:	80 e0       	ldi	r24, 0x00	; 0
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	08 95       	ret

000003c0 <_exit>:
 3c0:	f8 94       	cli

000003c2 <__stop_program>:
 3c2:	ff cf       	rjmp	.-2      	; 0x3c2 <__stop_program>
