
ASPD_ROBOTICS_PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000028e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006e4  00000000  00000000  000002e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  000009c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  00000a50  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000602  00000000  00000000  00000ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000166  00000000  00000000  000010d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000003d1  00000000  00000000  00001238  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000074  00000000  00000000  0000160c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000013e  00000000  00000000  00001680  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee e8       	ldi	r30, 0x8E	; 142
  fc:	f2 e0       	ldi	r31, 0x02	; 2
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 30       	cpi	r26, 0x00	; 0
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	12 e0       	ldi	r17, 0x02	; 2
 110:	a0 e0       	ldi	r26, 0x00	; 0
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a0 30       	cpi	r26, 0x00	; 0
 11a:	b1 07       	cpc	r27, r17
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	0e 94 ba 00 	call	0x174	; 0x174 <main>
 122:	0c 94 45 01 	jmp	0x28a	; 0x28a <_exit>

00000126 <__bad_interrupt>:
 126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <motion_pin_config>:
#include <avr/io.h>
#include <util/delay.h>

void motion_pin_config(void)
{
	DDRA = 0x0F;
 12a:	8f e0       	ldi	r24, 0x0F	; 15
 12c:	81 b9       	out	0x01, r24	; 1
	PORTA = 0x00;
 12e:	12 b8       	out	0x02, r1	; 2
	DDRL = 0x18;
 130:	88 e1       	ldi	r24, 0x18	; 24
 132:	80 93 0a 01 	sts	0x010A, r24
	PORTL = 0x18;
 136:	80 93 0b 01 	sts	0x010B, r24
}
 13a:	08 95       	ret

0000013c <timer5_init>:
void timer5_init()
{
	TCCR5A = 0xA9;
 13c:	89 ea       	ldi	r24, 0xA9	; 169
 13e:	80 93 20 01 	sts	0x0120, r24
	TCCR5B = 0x0B;
 142:	8b e0       	ldi	r24, 0x0B	; 11
 144:	80 93 21 01 	sts	0x0121, r24
	TCNT5L= 0x00;
 148:	10 92 24 01 	sts	0x0124, r1
	OCR5AH = 0x00;
 14c:	10 92 29 01 	sts	0x0129, r1
	OCR5AL = 0xFF;
 150:	8f ef       	ldi	r24, 0xFF	; 255
 152:	80 93 28 01 	sts	0x0128, r24
	OCR5BH = 0x00;
 156:	10 92 2b 01 	sts	0x012B, r1
	OCR5BL = 0xFF;	
 15a:	80 93 2a 01 	sts	0x012A, r24
}
 15e:	08 95       	ret

00000160 <forward>:

void forward(void)
{
	PORTA = 0x06;
 160:	86 e0       	ldi	r24, 0x06	; 6
 162:	82 b9       	out	0x02, r24	; 2
}
 164:	08 95       	ret

00000166 <stop>:
void stop(void)
{
	PORTA = 0x00;
 166:	12 b8       	out	0x02, r1	; 2
}
 168:	08 95       	ret

0000016a <velocity>:
void velocity(unsigned char Lm,unsigned char Rm)
{
	OCR5AL = (unsigned char )Lm;
 16a:	80 93 28 01 	sts	0x0128, r24
	OCR5BL = (unsigned char )Rm;
 16e:	60 93 2a 01 	sts	0x012A, r22
}
 172:	08 95       	ret

00000174 <main>:
int main(void)
{
	motion_pin_config();
 174:	0e 94 95 00 	call	0x12a	; 0x12a <motion_pin_config>
	timer5_init();
 178:	0e 94 9e 00 	call	0x13c	; 0x13c <timer5_init>
	//1
	forward();
 17c:	0e 94 b0 00 	call	0x160	; 0x160 <forward>
	velocity(160,160);
 180:	80 ea       	ldi	r24, 0xA0	; 160
 182:	60 ea       	ldi	r22, 0xA0	; 160
 184:	0e 94 b5 00 	call	0x16a	; 0x16a <velocity>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 188:	8f ef       	ldi	r24, 0xFF	; 255
 18a:	9f ef       	ldi	r25, 0xFF	; 255
 18c:	a0 ee       	ldi	r26, 0xE0	; 224
 18e:	81 50       	subi	r24, 0x01	; 1
 190:	90 40       	sbci	r25, 0x00	; 0
 192:	a0 40       	sbci	r26, 0x00	; 0
 194:	e1 f7       	brne	.-8      	; 0x18e <main+0x1a>
 196:	00 c0       	rjmp	.+0      	; 0x198 <main+0x24>
 198:	00 00       	nop
	_delay_ms(5000);
	stop();
 19a:	0e 94 b3 00 	call	0x166	; 0x166 <stop>
	//turn right
	forward();
 19e:	0e 94 b0 00 	call	0x160	; 0x160 <forward>
	velocity(255,0);
 1a2:	8f ef       	ldi	r24, 0xFF	; 255
 1a4:	60 e0       	ldi	r22, 0x00	; 0
 1a6:	0e 94 b5 00 	call	0x16a	; 0x16a <velocity>
 1aa:	8f ef       	ldi	r24, 0xFF	; 255
 1ac:	9f ef       	ldi	r25, 0xFF	; 255
 1ae:	a0 e5       	ldi	r26, 0x50	; 80
 1b0:	81 50       	subi	r24, 0x01	; 1
 1b2:	90 40       	sbci	r25, 0x00	; 0
 1b4:	a0 40       	sbci	r26, 0x00	; 0
 1b6:	e1 f7       	brne	.-8      	; 0x1b0 <main+0x3c>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <main+0x46>
 1ba:	00 00       	nop
	_delay_ms(1800);
	//2
	forward();
 1bc:	0e 94 b0 00 	call	0x160	; 0x160 <forward>
	velocity(200,200);
 1c0:	88 ec       	ldi	r24, 0xC8	; 200
 1c2:	68 ec       	ldi	r22, 0xC8	; 200
 1c4:	0e 94 b5 00 	call	0x16a	; 0x16a <velocity>
 1c8:	8f ef       	ldi	r24, 0xFF	; 255
 1ca:	9f ef       	ldi	r25, 0xFF	; 255
 1cc:	a9 e5       	ldi	r26, 0x59	; 89
 1ce:	81 50       	subi	r24, 0x01	; 1
 1d0:	90 40       	sbci	r25, 0x00	; 0
 1d2:	a0 40       	sbci	r26, 0x00	; 0
 1d4:	e1 f7       	brne	.-8      	; 0x1ce <main+0x5a>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <main+0x64>
 1d8:	00 00       	nop
	_delay_ms(2000);
	stop();
 1da:	0e 94 b3 00 	call	0x166	; 0x166 <stop>
	//turn left
	forward();
 1de:	0e 94 b0 00 	call	0x160	; 0x160 <forward>
	velocity(0,255);
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	6f ef       	ldi	r22, 0xFF	; 255
 1e6:	0e 94 b5 00 	call	0x16a	; 0x16a <velocity>
 1ea:	8f ef       	ldi	r24, 0xFF	; 255
 1ec:	9f e7       	ldi	r25, 0x7F	; 127
 1ee:	a3 e4       	ldi	r26, 0x43	; 67
 1f0:	81 50       	subi	r24, 0x01	; 1
 1f2:	90 40       	sbci	r25, 0x00	; 0
 1f4:	a0 40       	sbci	r26, 0x00	; 0
 1f6:	e1 f7       	brne	.-8      	; 0x1f0 <main+0x7c>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <main+0x86>
 1fa:	00 00       	nop
	_delay_ms(1500);
	//3
	forward();
 1fc:	0e 94 b0 00 	call	0x160	; 0x160 <forward>
	velocity(200,200);
 200:	88 ec       	ldi	r24, 0xC8	; 200
 202:	68 ec       	ldi	r22, 0xC8	; 200
 204:	0e 94 b5 00 	call	0x16a	; 0x16a <velocity>
 208:	8f ef       	ldi	r24, 0xFF	; 255
 20a:	9f ef       	ldi	r25, 0xFF	; 255
 20c:	a9 e5       	ldi	r26, 0x59	; 89
 20e:	81 50       	subi	r24, 0x01	; 1
 210:	90 40       	sbci	r25, 0x00	; 0
 212:	a0 40       	sbci	r26, 0x00	; 0
 214:	e1 f7       	brne	.-8      	; 0x20e <main+0x9a>
 216:	00 c0       	rjmp	.+0      	; 0x218 <main+0xa4>
 218:	00 00       	nop
	_delay_ms(2000);
	stop();
 21a:	0e 94 b3 00 	call	0x166	; 0x166 <stop>
	//right turn
	forward();
 21e:	0e 94 b0 00 	call	0x160	; 0x160 <forward>
	velocity(255,0);
 222:	8f ef       	ldi	r24, 0xFF	; 255
 224:	60 e0       	ldi	r22, 0x00	; 0
 226:	0e 94 b5 00 	call	0x16a	; 0x16a <velocity>
 22a:	8f ef       	ldi	r24, 0xFF	; 255
 22c:	9f e7       	ldi	r25, 0x7F	; 127
 22e:	a5 e5       	ldi	r26, 0x55	; 85
 230:	81 50       	subi	r24, 0x01	; 1
 232:	90 40       	sbci	r25, 0x00	; 0
 234:	a0 40       	sbci	r26, 0x00	; 0
 236:	e1 f7       	brne	.-8      	; 0x230 <main+0xbc>
 238:	00 c0       	rjmp	.+0      	; 0x23a <main+0xc6>
 23a:	00 00       	nop
	_delay_ms(1900);
	//4
	forward();
 23c:	0e 94 b0 00 	call	0x160	; 0x160 <forward>
	velocity(255,255);
 240:	8f ef       	ldi	r24, 0xFF	; 255
 242:	6f ef       	ldi	r22, 0xFF	; 255
 244:	0e 94 b5 00 	call	0x16a	; 0x16a <velocity>
 248:	8f ef       	ldi	r24, 0xFF	; 255
 24a:	9f e7       	ldi	r25, 0x7F	; 127
 24c:	ad e9       	ldi	r26, 0x9D	; 157
 24e:	81 50       	subi	r24, 0x01	; 1
 250:	90 40       	sbci	r25, 0x00	; 0
 252:	a0 40       	sbci	r26, 0x00	; 0
 254:	e1 f7       	brne	.-8      	; 0x24e <main+0xda>
 256:	00 c0       	rjmp	.+0      	; 0x258 <main+0xe4>
 258:	00 00       	nop
	_delay_ms(3500);
	stop();
 25a:	0e 94 b3 00 	call	0x166	; 0x166 <stop>
	//u turn
	forward();
 25e:	0e 94 b0 00 	call	0x160	; 0x160 <forward>
	velocity(240,140);
 262:	80 ef       	ldi	r24, 0xF0	; 240
 264:	6c e8       	ldi	r22, 0x8C	; 140
 266:	0e 94 b5 00 	call	0x16a	; 0x16a <velocity>
 26a:	8f ef       	ldi	r24, 0xFF	; 255
 26c:	9f e3       	ldi	r25, 0x3F	; 63
 26e:	a9 e1       	ldi	r26, 0x19	; 25
 270:	b1 e0       	ldi	r27, 0x01	; 1
 272:	81 50       	subi	r24, 0x01	; 1
 274:	90 40       	sbci	r25, 0x00	; 0
 276:	a0 40       	sbci	r26, 0x00	; 0
 278:	b0 40       	sbci	r27, 0x00	; 0
 27a:	d9 f7       	brne	.-10     	; 0x272 <main+0xfe>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <main+0x10a>
 27e:	00 00       	nop
	_delay_ms(7500);
	stop();
 280:	0e 94 b3 00 	call	0x166	; 0x166 <stop>
		
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	08 95       	ret

0000028a <_exit>:
 28a:	f8 94       	cli

0000028c <__stop_program>:
 28c:	ff cf       	rjmp	.-2      	; 0x28c <__stop_program>
